name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_maintenance
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      env:
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: true
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_maintenance
      run: |
        python manage.py test
        
    - name: Run linting
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        
    - name: Get dependencies
      working-directory: ./flutter_app
      run: flutter pub get
      
    - name: Analyze code
      working-directory: ./flutter_app
      run: flutter analyze
      
    - name: Run tests
      working-directory: ./flutter_app
      run: flutter test

  build-android:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        
    - name: Get dependencies
      working-directory: ./flutter_app
      run: flutter pub get
      
    - name: Build APK
      working-directory: ./flutter_app
      run: flutter build apk --release
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk
        path: flutter_app/build/app/outputs/flutter-apk/app-release.apk

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true
        
    - name: Upload Security Report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: bandit-report.json
